apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: project-request
objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
      openshift.io/requester: ${PROJECT_REQUESTING_USER}
    labels:
      workshop: podman201
      student: ${PROJECT_REQUESTING_USER}
    creationTimestamp: null
    name: ${PROJECT_NAME}
  spec: {}
  status: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: admin
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: podman201-limit-range
    namespace: ${PROJECT_NAME}
    labels:
      workshop: podman201
      student: ${PROJECT_REQUESTING_USER}
  spec:
    limits:
      - max:
          cpu: 100m
          memory: 128Mi
        defaultRequest:
          cpu: 1m
          memory: 10Mi
        type: Container
- kind: ResourceQuota
  apiVersion: v1
  metadata:
    name: podman201-quota
    namespace: ${PROJECT_NAME}
    labels:
      workshop: podman201
      student: ${PROJECT_REQUESTING_USER}    
  spec:
    hard:
      secrets: '6'
      persistentvolumeclaims: '0'
      replicationcontrollers: '0'
      requests.cpu: 800m
      requests.memory: 1Gi
      pods: '7'
      limits.cpu: 800m
      limits.memory: 1Gi
      configmaps: '2'
      services: '3'
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: allow-ingress
    namespace: ${PROJECT_NAME}
    labels:
      workshop: podman201
      student: ${PROJECT_REQUESTING_USER}
  spec:
    podSelector: {}
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                policy-group.network.openshift.io/ingress: ''
    policyTypes:
      - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-same-student-projects
    namespace: ${PROJECT_NAME}
    labels:
      workshop: podman201
      student: ${PROJECT_REQUESTING_USER}
  spec:
    podSelector: {} 
    policyTypes:
    - Ingress
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            workshop: podman201
            student: ${PROJECT_REQUESTING_USER}
parameters:
- name: PROJECT_NAME
- name: PROJECT_DISPLAYNAME
- name: PROJECT_DESCRIPTION
- name: PROJECT_ADMIN_USER
- name: PROJECT_REQUESTING_USER
